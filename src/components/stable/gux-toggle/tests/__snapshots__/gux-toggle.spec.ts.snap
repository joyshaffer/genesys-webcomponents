// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gux-toggle #render should render component as expected (1) 1`] = `
<gux-toggle>
  <mock:shadow-root>
    <div aria-checked="false" aria-label="" class="gux-toggle-container" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (2) 1`] = `
<gux-toggle checked="">
  <mock:shadow-root>
    <div aria-checked="true" aria-label="" class="gux-toggle-container" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-checked gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (3) 1`] = `
<gux-toggle checked="" disabled="">
  <mock:shadow-root>
    <div aria-checked="true" aria-label="" class="gux-disabled gux-toggle-container" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-checked gux-disabled gux-toggle-slider" role="presentation" tabindex="">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (4) 1`] = `
<gux-toggle checked-label="On" unchecked-label="Off">
  <mock:shadow-root>
    <div aria-checked="false" aria-label="Off" class="gux-toggle-container" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
        <div class="gux-toggle-label-and-error">
          <div class="gux-toggle-label">
            <div class="gux-toggle-label-text">
              Off
            </div>
          </div>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (5) 1`] = `
<gux-toggle checked="" checked-label="on" unchecked-label="off">
  <mock:shadow-root>
    <div aria-checked="true" aria-label="on" class="gux-toggle-container" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-checked gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
        <div class="gux-toggle-label-and-error">
          <div class="gux-toggle-label">
            <div class="gux-toggle-label-text">
              on
            </div>
          </div>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (6) 1`] = `
<gux-toggle checked-label="On" label-position="left" unchecked-label="Off">
  <mock:shadow-root>
    <div aria-checked="false" aria-label="Off" class="gux-toggle-container gux-toggle-label-left" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
        <div class="gux-toggle-label-and-error">
          <div class="gux-toggle-label">
            <div class="gux-toggle-label-text">
              Off
            </div>
          </div>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (7) 1`] = `
<gux-toggle checked="" checked-label="on" label-position="right" unchecked-label="off">
  <mock:shadow-root>
    <div aria-checked="true" aria-label="on" class="gux-toggle-container" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-checked gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
        <div class="gux-toggle-label-and-error">
          <div class="gux-toggle-label">
            <div class="gux-toggle-label-text">
              on
            </div>
          </div>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (8) 1`] = `
<gux-toggle checked-label="This is a long label for the toggle to test how it works" label-position="left" unchecked-label="This is another long label for the toggle to test how it works">
  <mock:shadow-root>
    <div aria-checked="false" aria-label="This is another long label for the toggle to test how it works" class="gux-toggle-container gux-toggle-label-left" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
        <div class="gux-toggle-label-and-error">
          <div class="gux-toggle-label">
            <div class="gux-toggle-label-text">
              This is another long label for the toggle to test how it works
            </div>
          </div>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;

exports[`gux-toggle #render should render component as expected (9) 1`] = `
<gux-toggle checked="" checked-label="This is a long label for the toggle to test how it works" label-position="right" unchecked-label="This is another long label for the toggle to test how it works">
  <mock:shadow-root>
    <div aria-checked="true" aria-label="This is a long label for the toggle to test how it works" class="gux-toggle-container" role="checkbox">
      <div class="gux-toggle-input">
        <gux-toggle-slider>
          <mock:shadow-root>
            <div class="gux-checked gux-toggle-slider" role="presentation" tabindex="0">
              <div class="gux-slider">
                <div class="gux-switch">
                  <gux-icon decorative="" icon-name="checkmark"></gux-icon>
                </div>
              </div>
            </div>
          </mock:shadow-root>
        </gux-toggle-slider>
        <div class="gux-toggle-label-and-error">
          <div class="gux-toggle-label">
            <div class="gux-toggle-label-text">
              This is a long label for the toggle to test how it works
            </div>
          </div>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</gux-toggle>
`;
